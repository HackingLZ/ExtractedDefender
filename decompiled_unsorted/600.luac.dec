-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: 600.luac 

-- params : ...
-- function num : 0
local l_0_0 = (mp.enum_mpattributesubstring)("Behavior:Win32/BlockMpTamper")
local l_0_1 = (mp.enum_mpattributesubstring)("Behavior:Win32/ShadowCopyDelete")
local l_0_2 = (mp.enum_mpattributesubstring)("Behavior:Win32/RunsBcdedit")
local l_0_3 = (mp.enum_mpattributesubstring)("Behavior:Win32/StartupRepair")
local l_0_4 = (mp.enum_mpattributesubstring)("Behavior:Win32/FsutilUsnDeleteJournal")
if #l_0_2 == 0 and #l_0_3 == 0 and #l_0_4 == 0 and #l_0_0 == 0 and #l_0_1 == 0 then
  return mp.CLEAN
end
local l_0_5, l_0_6, l_0_7, l_0_8, l_0_9 = nil, nil, nil, nil, nil
local l_0_10 = {}
local l_0_11, l_0_12, l_0_13, l_0_14, l_0_15 = nil, nil, nil, nil, nil
local l_0_16 = {}
l_0_16[".gif"] = true
l_0_16[".pdf"] = true
l_0_16[".doc"] = true
l_0_16[".docx"] = true
l_0_16[".docm"] = true
l_0_16[".xls"] = true
l_0_16[".xlsx"] = true
l_0_16[".xlsm"] = true
l_0_16[".ppt"] = true
l_0_16[".pptx"] = true
l_0_16[".pptm"] = true
l_0_16[".rtf"] = true
l_0_16[".zip"] = true
l_0_16[".rar"] = true
l_0_16[".cab"] = true
l_0_16[".jpg"] = true
l_0_16[".jpeg"] = true
l_0_16[".bmp"] = true
l_0_16[".png"] = true
l_0_16[".jpe"] = true
l_0_16[".xml"] = true
l_0_16[".wer"] = true
l_0_16[".dat"] = true
l_0_16[".tmp"] = true
if (this_sigattrlog[7]).matched and (this_sigattrlog[7]).wp1 ~= nil then
  l_0_5 = (this_sigattrlog[7]).utf8p1
  ;
  (table.insert)(l_0_10, (this_sigattrlog[7]).timestamp)
  l_0_11 = ((string.lower)((string.sub)(l_0_5, -5))):match("(%.%a+)$")
  if l_0_16[l_0_11] then
    return mp.CLEAN
  end
end
if (this_sigattrlog[25]).matched and (this_sigattrlog[25]).wp1 ~= nil then
  l_0_6 = (this_sigattrlog[25]).utf8p1
  ;
  (table.insert)(l_0_10, (this_sigattrlog[25]).timestamp)
  l_0_12 = ((string.lower)((string.sub)(l_0_6, -5))):match("(%.%a+)$")
  if l_0_16[l_0_12] then
    return mp.CLEAN
  end
end
if (this_sigattrlog[43]).matched and (this_sigattrlog[43]).wp1 ~= nil then
  l_0_7 = (this_sigattrlog[43]).utf8p1
  ;
  (table.insert)(l_0_10, (this_sigattrlog[43]).timestamp)
  l_0_13 = ((string.lower)((string.sub)(l_0_7, -5))):match("(%.%a+)$")
  if l_0_16[l_0_13] then
    return mp.CLEAN
  end
end
if (this_sigattrlog[61]).matched and (this_sigattrlog[61]).wp1 ~= nil then
  l_0_8 = (this_sigattrlog[61]).utf8p1
  ;
  (table.insert)(l_0_10, (this_sigattrlog[61]).timestamp)
  l_0_14 = ((string.lower)((string.sub)(l_0_8, -5))):match("(%.%a+)$")
  if l_0_16[l_0_14] then
    return mp.CLEAN
  end
end
if (this_sigattrlog[79]).matched and (this_sigattrlog[79]).wp1 ~= nil then
  l_0_9 = (this_sigattrlog[79]).utf8p1
  ;
  (table.insert)(l_0_10, (this_sigattrlog[79]).timestamp)
  l_0_15 = ((string.lower)((string.sub)(l_0_9, -5))):match("(%.%a+)$")
  if l_0_16[l_0_15] then
    return mp.CLEAN
  end
end
if l_0_11 ~= nil and l_0_11 == l_0_12 and l_0_11 == l_0_13 and l_0_11 == l_0_14 and l_0_11 == l_0_15 then
  (table.sort)(l_0_10)
  if l_0_10[#l_0_10] - l_0_10[1] < 5000000 then
    if (mp.get_sigattr_event_count)(16387) < 10 then
      return mp.CLEAN
    end
    if (mp.get_sigattr_event_count)(16384) < 20 then
      return mp.CLEAN
    end
    return mp.INFECTED
  end
end
return mp.CLEAN

