-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: 4193.luac 

-- params : ...
-- function num : 0
if not peattributes.isexe or peattributes.packed or not peattributes.no_exception or not peattributes.no_exports or not peattributes.no_security or not peattributes.x86_image or not peattributes.dt_error_heur_exit_criteria then
  return mp.CLEAN
end
if (mp.get_mpattribute)("TEL:lua_codepatch_shellter_trick") then
  return mp.CLEAN
end
if (mp.get_mpattribute)("TEL:lua_shellter_trick") then
  return mp.CLEAN
end
if (mp.getfilesize)() > 5242880 then
  return mp.CLEAN
end
local l_0_0 = (mp.getfilename)((mp.bitor)(mp.FILEPATH_QUERY_LOWERCASE, mp.FILEPATH_QUERY_FULL))
if (string.find)(l_0_0, "\\windows\\", 1, true) or (string.find)(l_0_0, "\\program files", 1, true) then
  return mp.CLEAN
end
if (string.find)((mp.getfilename)(), "->[ShellterEP]", 1, true) ~= nil then
  return mp.CLEAN
end
local l_0_1 = false
local l_0_2 = 0
for l_0_6 = 1, pevars.logsize do
  if (opclog[l_0_6]).value == 96 and (opclog[l_0_6 + 1]).value == 156 then
    l_0_1 = true
    l_0_2 = (opclog[l_0_6]).address
    break
  end
end
do
  if l_0_1 == false then
    return mp.CLEAN
  end
  if l_0_2 == pehdr.AddressOfEntryPoint + pehdr.ImageBase then
    return mp.CLEAN
  end
  local l_0_7 = check_expensive_loop(l_0_2, 384, 196608)
  if l_0_7 == nil then
    return mp.CLEAN
  end
  local l_0_8 = check_expensive_loop(l_0_7 + 2, 384, 196608)
  if l_0_8 == nil then
    return mp.CLEAN
  end
  local l_0_9 = check_expensive_loop(l_0_8 + 2, 384, 196608)
  if l_0_9 == nil then
    return mp.CLEAN
  end
  ;
  (mp.readprotection)(false)
  local l_0_10 = (mp.readfile)(0, (mp.getfilesize)())
  local l_0_11 = (mp.readu_u32)(l_0_10, 61)
  ;
  (mp.writeu_u32)(l_0_10, l_0_11 + 40 + 1, l_0_2 - pehdr.ImageBase)
  ;
  (mp.vfo_add_buffer)(l_0_10, "[ShellterEP]", mp.ADD_VFO_TAKE_ACTION_ON_DAD)
  return mp.INFECTED
end

