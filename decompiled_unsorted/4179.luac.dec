-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: 4179.luac 

-- params : ...
-- function num : 0
local l_0_0 = (mp.getfilesize)()
if l_0_0 < mp.FOOTERPAGE_SZ * 3 then
  return mp.CLEAN
end
if l_0_0 > 2097152 then
  return mp.CLEAN
end
;
(mp.readprotection)(false)
local l_0_1 = (mp.readfile)(0, l_0_0)
local l_0_2, l_0_3, l_0_4 = (string.find)(l_0_1, "= ?\"(.-)\"")
while (string.len)(l_0_4) < 800 do
  l_0_2 = (string.find)(l_0_1, "= ?\"(.-)\"", l_0_3 + 2)
end
if #l_0_4 < mp.FOOTERPAGE_SZ then
  return mp.CLEAN
end
local l_0_5, l_0_6, l_0_7 = (string.find)(l_0_1, "= ?%(?\"(.-)\"", l_0_3)
if #l_0_7 < 1 or #l_0_4 <= #l_0_7 then
  return mp.CLEAN
end
local l_0_8, l_0_9 = (string.gsub)(l_0_7, "([%.%$%%%^%+%-%*%?%(%)%{%}%[%]])", "%%%1")
if l_0_4:match(l_0_8) == nil then
  return mp.CLEAN
end
local l_0_10, l_0_11, l_0_12 = (string.find)(l_0_1, "= ?%(?\"(.-)\"", l_0_6)
if #l_0_12 < 1 or #l_0_4 <= #l_0_12 then
  return mp.CLEAN
end
local l_0_13 = function(l_1_0, l_1_1)
  -- function num : 0_0
  local l_1_2 = {}
  local l_1_3 = {}
  local l_1_4 = {}
  local l_1_5 = 0
  local l_1_6 = (l_1_1:rep(256 / #l_1_1 + 1)):sub(1, 256)
  for l_1_10 in (string.gmatch)(l_1_6, ".") do
    l_1_2[l_1_5] = l_1_5
    l_1_3[l_1_5] = l_1_10:byte()
    l_1_5 = l_1_5 + 1
  end
  local l_1_11 = 0
  for l_1_15 = 0, 255 do
    l_1_11 = (l_1_11 + l_1_2[l_1_15] + l_1_3[l_1_15]) % 255
    local l_1_16 = l_1_2[l_1_11]
    l_1_2[l_1_11] = l_1_2[l_1_15]
    l_1_2[l_1_15] = l_1_16
  end
  local l_1_17 = 0
  local l_1_18 = 0
  for l_1_22 = 1, 3072 do
    l_1_17 = (l_1_17 + 1) % 255
    l_1_18 = (l_1_18 + l_1_2[l_1_17]) % 255
    local l_1_23 = l_1_2[l_1_18]
    l_1_2[l_1_18] = l_1_2[l_1_17]
    l_1_2[l_1_17] = l_1_23
  end
  local l_1_24 = string.char
  for l_1_28 = 1, #l_1_0 do
    local l_1_33 = nil
    l_1_33 = l_1_17 + 1
    l_1_17 = (l_1_33) % 255
    l_1_33 = l_1_2[l_1_17]
    l_1_33 = l_1_18 + l_1_33
    l_1_18 = (l_1_33) % 255
    l_1_33 = l_1_2[l_1_18]
    local l_1_29, l_1_34 = nil
    l_1_29 = l_1_2[l_1_17]
    l_1_2[l_1_18] = l_1_29
    l_1_2[l_1_17] = l_1_33
    l_1_33 = #l_1_4
    l_1_33 = l_1_33 + 1
    l_1_29 = l_1_24
    l_1_34 = mp
    l_1_34 = l_1_34.bitxor
    do
      local l_1_36, l_1_37, l_1_38, l_1_39, l_1_40, l_1_41 = .end
      l_1_29 = l_1_29(l_1_34(l_1_2[(l_1_2[l_1_17] + l_1_2[l_1_18]) % 255], (l_1_0:sub(l_1_28, l_1_28)):byte()), l_1_36, l_1_37, l_1_38, l_1_39, l_1_40, l_1_41)
      local l_1_35 = nil
      l_1_4[l_1_33] = l_1_29
      -- DECOMPILER ERROR at PC91: Confused about usage of register R17 for local variables in 'ReleaseLocals'

      -- DECOMPILER ERROR at PC91: LeaveBlock: unexpected jumping out DO_STMT

    end
  end
  local l_1_30 = nil
  local l_1_31 = nil
  do
    local l_1_32 = nil
    do return (table.concat)(l_1_4, "") end
    -- DECOMPILER ERROR at PC98: Confused about usage of register R14 for local variables in 'ReleaseLocals'

  end
end

local l_0_14 = (mp.bitxor)((l_0_13("0", l_0_12)):byte(), 48)
;
(mp.vfo_add_buffer)(fastDec2BinWithKey(l_0_4, "(%d-)" .. l_0_8, l_0_14, mp.bitxor), "[JXSC3]", mp.ADD_VFO_TAKE_ACTION_ON_DAD)
return mp.CLEAN

