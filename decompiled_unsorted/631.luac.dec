-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: 631.luac 

-- params : ...
-- function num : 0
if peattributes.isdamaged then
  return mp.CLEAN
end
if not peattributes.no_security then
  return mp.CLEAN
end
if (mp.get_contextdata)(mp.CONTEXT_DATA_SCANREASON) == mp.SCANREASON_ONMODIFIEDHANDLECLOSE and (mp.get_contextdata)(mp.CONTEXT_DATA_NEWLYCREATEDHINT) == true then
  local l_0_0 = (mp.get_contextdata)(mp.CONTEXT_DATA_PROCESS_ID)
  if l_0_0 == 4 then
    local l_0_1, l_0_2 = nil, nil
    if (MpCommon.GetPersistContextCountNoPath)("RDPSettings") > 0 then
      local l_0_3 = (MpCommon.GetPersistContextNoPath)("RDPSettings")
      for l_0_7,l_0_8 in ipairs(l_0_3) do
        l_0_1 = (string.match)(l_0_8, "UA=([%d]+);SL=([%d]+)")
        if l_0_1 ~= nil then
          l_0_1 = tonumber(l_0_1)
          -- DECOMPILER ERROR at PC68: Overwrote pending register: R2 in 'AssignReg'

          break
        end
      end
    else
      do
        local l_0_9 = ((sysio.RegOpenKey)("HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services"))
        local l_0_10 = nil
        if l_0_9 then
          l_0_1 = (sysio.GetRegValueAsDword)(l_0_9, "UserAuthentication")
          if l_0_1 == nil then
            l_0_10 = (sysio.RegOpenKey)("HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp")
            if l_0_10 then
              l_0_1 = (sysio.GetRegValueAsDword)(l_0_10, "UserAuthentication")
            end
          end
          -- DECOMPILER ERROR at PC106: Overwrote pending register: R2 in 'AssignReg'

          if l_0_2 == nil then
            if l_0_10 == nil then
              l_0_10 = (sysio.RegOpenKey)("HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp")
            end
            -- DECOMPILER ERROR at PC123: Overwrote pending register: R2 in 'AssignReg'

          end
        end
        if l_0_10 then
          local l_0_11 = {}
          l_0_11.UserAuthentication = l_0_1
          do
            local l_0_12 = "UA=" .. l_0_1 .. ";SL=" .. l_0_2
            ;
            (table.insert)(l_0_11, l_0_12)
            ;
            (MpCommon.SetPersistContextNoPath)("RDPSettings", l_0_11, 3600)
            if l_0_1 == 1 then
              return mp.CLEAN
            else
              if l_0_2 == 0 then
                return mp.CLEAN
              end
            end
            if (mp.IsTrustedFile)(false) == true then
              return mp.CLEAN
            end
            local l_0_13 = (mp.get_contextdata)(mp.CONTEXT_DATA_FILEPATH)
            if l_0_13 ~= nil then
              local l_0_14 = (mp.PathToWin32Path)(l_0_13)
              if l_0_14 == nil then
                return mp.CLEAN
              end
              local l_0_15 = {}
              l_0_15[":\\windows\\softwaredistribution"] = 1
              l_0_15[":\\windows\\assembly\\nativeimage"] = 1
              l_0_15[":\\program files\\cisco\\amp\\tmp\\"] = 1
              l_0_15[":\\windows\\carbonblack\\store\\tm"] = 1
              l_0_15[":\\program files (x86)\\trend mi"] = 1
              l_0_15[":\\program files\\trend\\sprotect"] = 1
              l_0_15[":\\$windows.~bt\\newos\\windows\\w"] = 1
              l_0_15[":\\windows\\winsxs\\temp\\inflight"] = 1
              l_0_15[":\\build_drop\\3ebuilddrop\\build"] = 1
              l_0_15[":\\windows\\csc\\v2.0.6\\namespace"] = 1
              l_0_15[":\\program files (x86)\\bmw\\ispi"] = 1
              l_0_15[":\\program files\\sourcefire\\fir"] = 1
              l_0_15[":\\programdata\\origin\\selfupdat"] = 1
              l_0_15[":\\program files\\microsoft dyna"] = 1
              l_0_15[":\\program files\\matlab\\r2019a\\"] = 1
              do
                do
                  do
                    if #l_0_14 > 30 then
                      local l_0_16 = ((string.sub)(l_0_14, 2, 31)):lower()
                      if l_0_15[l_0_16] or (string.find)(l_0_16, "\\$windows.~bt\\", 1, true) then
                        return mp.CLEAN
                      end
                    end
                    if not (MpCommon.QueryPersistContext)(l_0_13, "SystemDrop") then
                      (MpCommon.AppendPersistContext)(l_0_13, "SystemDrop", 600)
                    end
                    do return mp.INFECTED end
                    return mp.CLEAN
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end

