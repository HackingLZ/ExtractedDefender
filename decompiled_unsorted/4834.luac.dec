-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: 4834.luac 

-- params : ...
-- function num : 0
propagateTTParent = function(l_1_0, l_1_1, l_1_2)
  -- function num : 0_0
  local l_1_3 = (mp.GetParentProcInfo)(l_1_0)
  if l_1_3 == nil then
    return 
  end
  l_1_0 = l_1_3.ppid
  if l_1_0 == nil then
    return 
  end
  TrackPidAndTechniqueBM(l_1_0, l_1_1, l_1_2)
  return 
end

isProcessExcluded = function(l_2_0, l_2_1)
  -- function num : 0_1
  local l_2_2 = {}
  local l_2_3 = {}
  -- DECOMPILER ERROR at PC4: No list found for R3 , SetList fails

  local l_2_4 = {}
  -- DECOMPILER ERROR at PC6: Overwrote pending register: R5 in 'AssignReg'

  -- DECOMPILER ERROR at PC8: No list found for R4 , SetList fails

  -- DECOMPILER ERROR at PC9: No list found for R2 , SetList fails

  for i_1,i_2 in l_2_3 do
    local l_2_8 = l_2_7[1]
    local l_2_9 = l_2_7[2]
    if (string.find)(l_2_0, l_2_8, 1, true) and (string.find)(l_2_1, l_2_9, 1, true) then
      return true
    end
  end
  do return false end
  -- DECOMPILER ERROR at PC40: Confused about usage of register R4 for local variables in 'ReleaseLocals'

  -- WARNING: undefined locals caused missing assignments!
end

local l_0_0, l_0_1, l_0_2, l_0_3 = nil, nil, nil, nil
if (this_sigattrlog[1]).matched then
  l_0_0 = (this_sigattrlog[1]).utf8p1
  l_0_1 = (this_sigattrlog[1]).utf8p2
  l_0_2 = (this_sigattrlog[1]).ppid
  l_0_3 = (this_sigattrlog[1]).image_path
end
local l_0_4 = (mp.GetProcessCommandLine)(l_0_2)
if not l_0_0 or not l_0_1 or not l_0_2 or not l_0_3 or not l_0_4 then
  return mp.CLEAN
end
if not (string.match)(l_0_0, "T%d%d%d%d") or l_0_1 == "INFECTED" then
  return mp.CLEAN
end
if isProcessExcluded(l_0_3, l_0_4) then
  return mp.CLEAN
end
local l_0_5 = {}
-- DECOMPILER ERROR at PC63: No list found for R5 , SetList fails

-- DECOMPILER ERROR at PC64: Overwrote pending register: R6 in 'AssignReg'

-- DECOMPILER ERROR at PC65: Overwrote pending register: R7 in 'AssignReg'

for l_0_9,l_0_10 in ("Execution_SuspiciousProcessLaunch")("Execution_SuspiciousCommandline") do
  if l_0_1 == l_0_10 then
    return mp.CLEAN
  end
end
local l_0_11 = IsDetectionThresholdMetLinux(l_0_2)
if l_0_11 then
  (bm.trigger_sig)("SuspiciousTTRel", "Detected")
  return mp.CLEAN
end
propagateTTParent(l_0_2, l_0_0, l_0_1)
return mp.CLEAN

