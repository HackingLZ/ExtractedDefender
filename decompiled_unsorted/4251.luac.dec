-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: 4251.luac 

-- params : ...
-- function num : 0
local l_0_0 = (mp.get_contextdata)(mp.CONTEXT_DATA_FILEPATH)
if l_0_0 == nil or (string.len)(l_0_0) < 10 or (string.sub)((string.lower)(l_0_0), -9) ~= "\\system32" then
  return mp.CLEAN
end
local l_0_1 = (string.lower)((mp.get_contextdata)(mp.CONTEXT_DATA_FILENAME))
if l_0_1 == nil or (string.len)(l_0_1) < 5 or (string.sub)(l_0_1, -4) ~= ".exe" then
  return mp.CLEAN
end
local l_0_2 = {}
local l_0_3 = {}
l_0_3["sethc.exe"] = true
l_0_3.sethc = true
l_0_2["sethc.exe"] = l_0_3
l_0_2["utilman.exe"], l_0_3 = l_0_3, {["utilman.exe"] = true, ["utilman2.exe"] = true, utilman = true}
l_0_2["osk.exe"], l_0_3 = l_0_3, {["osk.exe"] = true, osk = true}
l_0_2["magnify.exe"], l_0_3 = l_0_3, {["screenmagnifier.exe"] = true, ["magnify.exe"] = true, magnifier = true}
l_0_2["narrator.exe"], l_0_3 = l_0_3, {["narrator.exe"] = true, ["sr.exe"] = true, narrator = true}
l_0_2["displayswitch.exe"], l_0_3 = l_0_3, {["displayswitch.exe"] = true, displayswitch = true}
l_0_2["atbroker.exe"], l_0_3 = l_0_3, {["atbroker.exe"] = true}
l_0_3 = l_0_2[l_0_1]
if l_0_3 == nil then
  l_0_3 = mp
  l_0_3 = l_0_3.CLEAN
  return l_0_3
end
l_0_3 = string
l_0_3 = l_0_3.lower
l_0_3 = l_0_3((mp.PathToWin32Path)(l_0_0))
l_0_0 = l_0_3
l_0_3 = l_0_3(l_0_0, "\\\\%?\\", "")
l_0_0 = l_0_3
l_0_3 = string
l_0_3 = l_0_3.lower
l_0_3 = l_0_3((mp.ContextualExpandEnvironmentVariables)("%windir%") .. "\\system32")
if l_0_0 ~= l_0_3 then
  return mp.CLEAN
end
local l_0_4 = (pe.get_versioninfo)()
if l_0_4 == nil or l_0_4.OriginalFilename == nil or l_0_4.InternalName == nil or l_0_4.CompanyName == nil then
  (mp.set_mpattribute)("Lua:AccessibilityEscalationContext.B!noversioninfo")
  return mp.INFECTED
end
local l_0_5 = false
local l_0_6 = l_0_0 .. "\\" .. l_0_1
if (mp.IsTrustedFile)(false) ~= true then
  local l_0_7 = (mp.IsKnownFriendlyFile)(l_0_6, true, false)
  l_0_7 = l_0_7
  if l_0_7 == true then
    l_0_5 = true
  end
  l_0_7 = string
  l_0_7 = l_0_7.lower
  l_0_7 = l_0_7(l_0_4.CompanyName)
  local l_0_8 = nil
  l_0_8 = string
  l_0_8 = l_0_8.lower
  l_0_8 = l_0_8(l_0_4.OriginalFilename)
  local l_0_9 = nil
  l_0_9 = string
  l_0_9 = l_0_9.lower
  l_0_9 = l_0_9(l_0_4.InternalName)
  do
    local l_0_10 = nil
    l_0_10 = l_0_2[l_0_1]
    l_0_10 = l_0_10[l_0_8]
    if l_0_10 ~= nil then
      l_0_10 = l_0_2[l_0_1]
      l_0_10 = l_0_10[l_0_9]
      if l_0_10 ~= nil and l_0_7 == "microsoft corporation" then
        if not l_0_5 then
          l_0_10 = mp
          l_0_10 = l_0_10.set_mpattribute
          l_0_10("Lua:AccessibilityEscalationContext.B!mimick")
          l_0_10 = mp
          l_0_10 = l_0_10.INFECTED
          return l_0_10
        end
        l_0_10 = mp
        l_0_10 = l_0_10.CLEAN
        return l_0_10
      end
    end
    l_0_10 = l_0_2[l_0_1]
    l_0_10 = l_0_10[l_0_8]
    if l_0_10 == nil then
      l_0_10 = mp
      l_0_10 = l_0_10.set_mpattribute
      l_0_10("Lua:AccessibilityEscalationContext.B!originalfname_nomatch")
    end
    l_0_10 = l_0_2[l_0_1]
    l_0_10 = l_0_10[l_0_9]
    if l_0_10 == nil then
      l_0_10 = mp
      l_0_10 = l_0_10.set_mpattribute
      l_0_10("Lua:AccessibilityEscalationContext.B!internalname_nomatch")
    end
    if l_0_7 ~= "microsoft corporation" then
      l_0_10 = mp
      l_0_10 = l_0_10.set_mpattribute
      l_0_10("Lua:AccessibilityEscalationContext.B!company_nomatch")
    end
    if l_0_5 then
      l_0_10 = mp
      l_0_10 = l_0_10.set_mpattribute
      l_0_10("Lua:AccessibilityEscalationContext.B!friendly")
    else
      l_0_10 = mp
      l_0_10 = l_0_10.set_mpattribute
      l_0_10("Lua:AccessibilityEscalationContext.B!unfriendly")
    end
    l_0_10 = mp
    l_0_10 = l_0_10.INFECTED
    do return l_0_10 end
    -- DECOMPILER ERROR: 10 unprocessed JMP targets
  end
end

